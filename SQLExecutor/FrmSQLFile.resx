<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AACiSBgAo+21ACPTTwC/moQA/9SMAOSJGQBZvV4A9eDNAG/nhwDYi0AA4Mq7AE3bcQD/9ckA4p9YAPXF
        gwDRcgoA4eLuAPymJQCN6KUA5rWBAMxmAADAyJ8A//G3AM/12QC08MMA/blZAGffhQDlpUcAx4lfANyP
        RADAcDMA2LOTABPQQQA12WYA++C3APb7/wD/zJkAulMJAPbWrQD87+YA3PjjAP/MZgDv38cA/KpNAITm
        nQD2xI4Ax2siANmogADwx6AAx/TSAJbqqwDimj0A/ejGAOu7kwD//u8AtV0kANZ+LwDtrlsA/vHdAPem
        QACuWiwA+PbxAFneegAw1lkA7e3uAMzMzADewrAAzXYdAPnj1gD/2psA+sR0AMyZZgDtt24Are+9AP7d
        pADHaRQA7fvxALefkQAAAAAA/dCLAP7NhgDjrHIA2r2lAPv16QAZ0UcAd+SSANj23ABt4ooA8rttAJrr
        rgDxuXsA/uLNAP+6SgC+8ssA88mrANnu4wD+364A+tCPANF5IADwlh4AQdlnAOzk3gC6c0YA////APXm
        5gD9688AzmsIAM6LTQCgXzsAx6+gAN+lZQCqVR4A87+OANKhdAAq1lAAUNxzAIjnoADzpUoA5vnqAL5n
        IgD+tT8A/OreAN2YTwDPk20A8rNmAP7ovQCT6acA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5O
        Tk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OdlkxTk5MTk5OTk5OTk5OTk5OTk5OTk5OTk5O
        Tk5OTk4BGlUodld+Tk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTnQSGFUac2QBTk5OTk5OTk5OTk5OTk5O
        Tk5OTk4YC0kSZBdOVz9VGCxOTk5OTk5OTk5OTk5OTk5OTk5Odj8gAiA/MShJfhgBAldOTk5OTk5OTk5O
        Tk5OTk5OTk4xAlVXZDJJAUlJGBJUAk5OTk5OTk5OPU5OTk5OTk5OTk5+WRhJWUkxF11+ElUaTk5OTk5O
        TkIfH0BOPQpATk5MWT8+GFkxTk5OTixVVVlOTk5OTk42ExMTUkAwbntATjIgICwBXU5OTk5MGlULVU5O
        TiNOTj1RXjpScW5ubi89Mj9XGAFOTk5OThI+VwtkTk4ma0FlR3ppNiYdCVEWE0BdSSh+Mk5OTk50ZAtz
        C1lOB0MUd0NqOCI0Ii0tSkodHF8IGl1kV0kSCz8/IT4xTk41FBs5amIOYGBKSkpKUEsleyFydhogVFRU
        Ags+Gk5OTgcbRUVGYUVQYUVFUE9PG2IzBiwxVnNyAj8+fixZTk5OTi1PJGAEDiI6U1M0RkZGKRkVKBJX
        TAFZXVkXdk5OTkIvLhtKYWEnZ2dnZz0ZGRlYW05OMT4BMV1+MU5OTk5OSyUUWEUtU2dnZ2dnBysZXGsQ
        Tk5ndlZOTnZOTk5OTk4PDzNFDipnZ2dnZyNaKyt4BS9OTmdOTk5OTk5OTk5OThtgYFBwI2dnZ2cjHzMN
        OxERJk5OTk5OTk5OTk5OTk5OfEVKBEdBZ2dnZQM4CQkROzBOTk5OTk5OTk5OTk5OTk4HODkWCWxNbQNm
        Lh4eYztoTk5OTk5OTk5OTk5OTk5OTkRLBQxGJQBvbzc8dzlcDU5OTk5OTk5OTk5OTk5OTk5OBzgONAxI
        d29vNwl8UHxwTk5OTk5OTk5OTk5OTk5OTk5OLSZwWn19Dg5KYTBERE5OTk5OTk5OTk5OTk5OTk5OTk4n
        W2hiYX1eJEoTTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTnAtXk4HLXlOTk5OTk5OTk5OTk5OTk5OTk5O
        Tk5OTk5OTnlOTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5O
        Tk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5O
        Tk5OTk5OTk5OTv/////////////+N////gP///4B///gQf//wAD//8AA/3/gAP4RgPD8AIHg7AAD4MAA
        A8CAAAABgAAAA4AAAAPAAAAHAAAwHwAAMb8AADf/AAA//wAAf/8AAP//AAH//wAB//+AA///gB////Ef
        ///7////////////////////
</value>
  </data>
</root>